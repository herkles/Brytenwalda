namespace = tapestry_frankish

#######################################
# Frankish Cultural Split up
#######################################
tapestry_frankish.001 = {# splitting up the culture
	scope = none
	hidden = yes
	
	immediate = {
		# Split the Frankish culture into French, Lotharingian/Lorraine/Franconian
		culture:frankish = { save_scope_as = frankish } # Save scope for player notification events.
		culture:french = {
			# 'Diverge' this culture by copying innovations/traditions.
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = french 
		}
		culture:lorrainian = {
			# 'Diverge' this culture by copying innovations/traditions.
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = lorrainian 
		}
		culture:lothringian = {
			# 'Diverge' this culture by copying innovations/traditions.
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = lothringian 
		}		
		culture:franconian = {
			# 'Diverge' this culture by copying innovations/traditions.
			reset_culture_creation_date = yes
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = franconian 
		}
		culture:burgundian = {
			# 'Diverge' this culture by copying innovations/traditions.
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = burgundian 
		}
		culture:gallo = {
			# 'Diverge' this culture by copying innovations/traditions.
			get_all_innovations_from = scope:frankish
			# Save scope for player notification events.
			save_scope_as = gallo 
		}
		# Compile a list of all Frankish counties in the frankish empire to convert to the appropriate culture.
		every_county = {
			limit = {
				# All Frankish counties in Frankia will convert to the appropriate culture.
				culture = culture:frankish
				title_province = {
					OR = {
						geographical_region = world_europe_west_germania
						geographical_region = world_europe_west_francia
					}
				}
			}
			add_to_list = frankish_counties
		}


		title:d_anjou = {# if Britanny controls Anjou then Gallo Gets to spread further.
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					OR = {
						culture = culture:frankish
						culture = culture:french
					}
					title_province = { geographical_region = custom_anjou }
					holder = { has_primary_title = title:k_brittany }
				}
				set_county_culture = culture:gallo	
			}
		}
		title:d_burgundy = {# if Burgundy is controlled by a burgundian then burgundian spreads northwards.
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					OR = {
						culture = culture:frankish
						culture = culture:french
					}
					title_province = { geographical_region = custom_burgundy }
					holder = { has_culture = culture:burgundian }
				}
				set_county_culture = culture:burgundian	
			}
		}
		title:d_lower_lorraine = {# if Burgundy is controlled by a burgundian then burgundian spreads northwards.
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					OR = {
						culture = culture:frankish
						culture = culture:franconian
					}
					title_province = { geographical_region = ghw_region_germanic }
					holder = { has_primary_title = title:k_lotharingia }
				}
				set_county_culture = culture:lothringian	
			}
		}

		# Convert the Frankish counties to the new culture.
		every_in_list = {
			list = frankish_counties
			# First make Lotharingian
			convert_county_and_holder_if_in_region_effect = {
				OLD_CULTURE = culture:frankish
				NEW_CULTURE = culture:lorrainian
				REGION = custom_french_lotharingia
			}
			convert_county_and_holder_if_in_region_effect = {
				OLD_CULTURE = culture:frankish
				NEW_CULTURE = culture:lothringian
				REGION = custom_german_lotharingia
			}
			# Second, any frankish counties in West Francia become French
			convert_county_and_holder_if_in_region_effect = {
				OLD_CULTURE = culture:frankish
				NEW_CULTURE = culture:french
				REGION = world_europe_west_francia
			}
			# Finally, all remaining Frankish counties become franconian
			convert_county_and_holder_if_in_region_effect = {
				OLD_CULTURE = culture:frankish
				NEW_CULTURE = culture:franconian
				REGION = world_europe_west_germania
			}
		}

		# Send the appropriate notification event to each player.
	}
}
#######################################
# Lothair and his marriage woes
#######################################
tapestry_frankish.010 = {# Kill Pope Nicholas
	scope = none
	hidden = yes
	
	trigger = {
		current_date >= 867.10.1
		character:7853 = {# Pope Nicholas well must be Pope and alive to die. 
			AND = {
				is_alive = yes 
				has_title = title:k_papal_state
			}
		}
	}

	immediate = {
		character:7853 = {# Pope Nicholas
			if = {
				limit = { is_alive = yes }
				death = { death_reason = death_natural_causes }
			}
		}
	}
}
tapestry_frankish.011 = {# Head to Italy to Meet with the new Pope?
	type = character_event
	title = tapestry_frankish.011.t
	desc = tapestry_frankish.011.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	trigger = {
		this = character:144998 #Lothair
		has_title = title:k_lotharingia
		is_at_war = no # Lothair must not be dealing with other stuff to visit Rome
		is_busy_in_events_unlocalised = no # Must not be doing other stuff
		character:7853 = {# Pope Nicholas well must not be Pope, so new pope 
			NOT = { has_title = title:k_papal_state	}
		}
		has_global_variable = lothair_travel_decision # Needs William to be king
	}
	
	immediate = {
		title:k_papal_state.holder = { save_scope_as = pope }
		set_global_variable = {
			name = lothair_travel_decision
			value = yes
		}
	}

	option = {# Make our Case to Rome
		name = tapestry_frankish.011.visit
		ai_chance = { base = 99 }
		hidden_effect = {
			add_character_flag = {# to ensure you can't do other things while you are making your case to rome
				flag = is_in_diplomacy_foreign_special_event
			}
			trigger_event = {
				id = tapestry_frankish.012
				days = { 80 150 }
			}
		}

	}	
	option = {# Stay Home
		name = tapestry_frankish.011.stay
		ai_chance = { base = 1	}
	}
}
tapestry_frankish.012 = {# Meeting with the Pope
	type = character_event
	title = tapestry_frankish.012.t
	desc = tapestry_frankish.012.desc
	theme = faith
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = scope:pope
	override_background = { reference = temple_church }

	immediate = {
		title:k_papal_state.holder = { save_scope_as = pope }
	}

	option = {# Thank you Holy Father
		name = tapestry_frankish.012.rome
		show_as_tooltip = {
			scope:pope = {
				add_hook = {
					target = character:144998
					type = favor_hook
				}
			}
			custom_tooltip = tapestry_frankish.012.rome.tt
		}
	}	

	after = {
		trigger_event = {
			id = tapestry_frankish.013
			days = { 20 60 }
		}
	}	

}
tapestry_frankish.013 = {# Getting Infected
	type = character_event
	title = tapestry_frankish.013.t
	desc = tapestry_frankish.013.desc
	theme = skull
	left_portrait = {
		character = root
		animation = sick
	}
	override_background = { reference = bryten_forest_path }

	immediate = {

	}

	option = {# Lothair gets sick on the way back home
		name = tapestry_frankish.013.sick
		random_list = {	
			0 = {# You survive.
				modifier = { add = harm_event_random_list_low_odd_success_value }
				desc = tapestry_frankish.013.sick.tt.success
				send_interface_toast = {
					title = tapestry_frankish.013.sick.tt.success
					left_icon = root
					custom_tooltip = harm.0000.tt.spared_for_now
				}
				hidden_effect = {
					trigger_event = {
						id = tapestry_frankish.014
						days = { 20 60 }
					}
				}
			}
			# You perish.
			0 = {
				modifier = { add = harm_event_random_list_low_odd_failure_value }
				desc = tapestry_frankish.013.sick.tt.failure
				send_interface_toast = {
					title = tapestry_frankish.013.sick.tt.failure
					left_icon = root
					death = { death_reason = death_ill }
				}
			}
		}
	}
	option = {# if Lothair somehow has whole of body he can survive here
		name = tapestry_frankish.013.live
		trigger = { has_trait = whole_of_body }
		trait = whole_of_body
		custom_tooltip = harm.0000.tt.spared_for_now
		# Always gain stress from trait opt-outs.
		stress_impact = {
			base = massive_stress_impact_gain
			calm = minor_stress_impact_loss
		}
		ai_chance = {
			# The AI should essentially always take this option.
			base = 1000
		}
	}	
}
tapestry_frankish.014 = {# Returning home and Waldrada is now Queen and legitimizing my son
	type = character_event
	title = tapestry_frankish.014.t
	desc = tapestry_frankish.014.desc
	theme = realm
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = character:168314
		animation = happiness
	}
	lower_left_portrait = {
		character = character:90102
	}	
	
	immediate = {
		remove_character_flag = is_in_diplomacy_foreign_special_event
		# First Divorce Teutberga
		divorce_effect = {
			DIVORCER = character:144998 # Lothair
			DIVORCEE = character:6877 # Teutberga
		}
		# Next Make Waldrada Queen
		marry = character:168314
		# and then Make Lothair's children legitimized bastards
		hidden_effect = {
			character:90102 = {# Hughes
				remove_trait = bastard
				add_trait = legitimized_bastard
			}
			character:7920 = {# Bertha
				remove_trait = bastard
				add_trait = legitimized_bastard
			}
			character:163174 = {# Irmgard
				remove_trait = bastard
				add_trait = legitimized_bastard
			}
			character:168315 = {# Gisela
				remove_trait = bastard
				add_trait = legitimized_bastard
			}
		}
		# Hughes is the heir
		set_designated_heir = character:90102
	}

	option = {# Good Riddence
		name = tapestry_frankish.014.a
		stress_impact = {# Lothair is relieved
			base = massive_stress_impact_loss
		}
	}
}









