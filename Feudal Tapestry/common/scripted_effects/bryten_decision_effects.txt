#######################################
#									  #
#         Anglo-Saxon Effects  	      #
#									  #
#######################################
unite_kingdom_england_decision_effects = {# Uniting England
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_england = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	if = {
		limit = { scope:england_kingdom_uniter.primary_title = title:k_mercia }
		primary_title = { set_coa = k_england_mercia }
	}
	else_if = {
		limit = { scope:england_kingdom_uniter.primary_title = title:k_northumbria }
		primary_title = { set_coa = k_england_northumbria }
	}
	else_if = {
		limit = { scope:england_kingdom_uniter.primary_title = title:k_east_anglia }
		primary_title = { set_coa = k_england_east_anglia }
	}
	else_if = {
		limit = { scope:england_kingdom_uniter.primary_title = title:k_kent }
		primary_title = { set_coa = k_england_kent }
	}
	else_if = {
		limit = { scope:england_kingdom_uniter.primary_title = title:k_wessex }
		primary_title = { set_coa = k_england }
	}


	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_england

	title:k_kent = { add_to_list = english_kingdoms }
	title:k_northumbria = { add_to_list = english_kingdoms }
	title:k_mercia = { add_to_list = english_kingdoms }
	title:k_east_anglia = { add_to_list = english_kingdoms }
	title:k_wessex = { add_to_list = english_kingdoms }
	title:k_essex = { add_to_list = english_kingdoms }

	every_in_list = {
		list = english_kingdoms
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_duchy
			}
			set_de_jure_liege_title = title:k_england
		}
	}

	hidden_effect = {
		if = {
			limit = { has_title = title:k_kent }
			destroy_title = title:k_kent
		}
		if = {
			limit = { has_title = title:k_northumbria }
			destroy_title = title:k_northumbria
		}
		if = {
			limit = { has_title = title:k_mercia }
			destroy_title = title:k_mercia
		}
		if = {
			limit = { has_title = title:k_east_anglia }
			destroy_title = title:k_east_anglia
		}
		if = {
			limit = { has_title = title:k_wessex }
			destroy_title = title:k_wessex
		}
		if = {
			limit = { has_title = title:k_essex }
			destroy_title = title:k_essex
		}
	}
}
restore_kingdom_kent_decision_scripted_effect = {# Restoring The Kingdom of Kent
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_kent = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_kent

	title:d_canterbury = { add_to_list = kentish_kingdom }


	every_in_list = {
		list = kentish_kingdom
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_duchy
			}
			set_de_jure_liege_title = title:k_kent
		}
	}

}
restore_kingdom_essex_decision_scripted_effect = {# Restoring The Kingdom of Essex
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_essex = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:d_bedford

	title:d_bedford = { add_to_list = essex_kingdom }


	every_in_list = {
		list = essex_kingdom
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_duchy
			}
			set_de_jure_liege_title = title:k_essex
		}
	}

}
unify_anglo_saxon_culture_effect = {# Unifying Anglo Saxon
	# Prestige Bonus

	#Convert your, and your whole family's, culture
	set_culture = culture:anglo_saxon
	if = {
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = { is_landed = no }
			set_culture = culture:anglo_saxon
		}
	}
	if = {
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:anglo_saxon
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = culture:mercian
					culture = culture:northumbrian
					culture = culture:west_saxon
					culture = culture:east_anglian

				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				OR = {
					culture = culture:mercian
					culture = culture:northumbrian
					culture = culture:west_saxon
					culture = culture:east_anglian
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
			set_culture = culture:anglo_saxon
		}
	}
}
reestablish_saxon_adminstration_effects = {
	title:k_england = {# Edgar restores the Witengamot to power
		add_title_law = saxon_elective_succession_law
	}
	title:k_england.holder = { save_scope_as = saxon_king }
	title:d_normandy.holder = { save_scope_as = norman_king }
	title:k_france.holder = { save_scope_as = french_king }
	title:c_rouen.holder = { save_scope_as = rouen_count }
	title:c_bayeux.holder = { save_scope_as = bayeux_count }
	title:c_avranches.holder = { save_scope_as = avranches_count }
	title:c_lisieux.holder = { save_scope_as = lisieux_count }
	title:c_eu.holder = { save_scope_as = eu_count }
	title:c_maine.holder = { save_scope_as = maine_count }


	every_county_in_region = { # Normandy rules holding land in England lose it. 
		region = custom_england_saxon
		limit = {
			OR = {
				holder = title:d_normandy.holder
				holder = title:c_rouen.holder
				holder = title:c_bayeux.holder
				holder = title:c_avranches.holder
				holder = title:c_lisieux.holder
				holder = title:c_eu.holder
			} 
		}
		save_scope_as = norman_england_county
	}
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = change
		add_claim_on_loss = yes
	}	
	scope:norman_england_county = {
		change_title_holder = {
			holder = scope:saxon_king
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	scope:norman_king = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:rouen_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:bayeux_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:avranches_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:lisieux_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:eu_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	scope:maine_count = {
		every_held_title = {
			limit = {
				tier >= tier_county
				kingdom = title:k_england 
			}
			add_to_list = revoked_norman_king_titles
		}
		every_vassal = {
			add_to_list = vassals_for_you
		}
		add_opinion = {
			target = scope:saxon_king
			modifier = revoked_title
		}
	}
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = title_change_normans_flee
		add_claim_on_loss = yes
	}
	every_in_list = {
		list = revoked_norman_king_titles
		change_title_holder = {
			holder = scope:saxon_king
			change = scope:title_change_normans_flee
			take_baronies = no
		}
	}
	every_in_list = {
		list = vassals_for_you
		change_liege = {
			liege = scope:saxon_king
			change = scope:title_change_normans_flee
		}
	}
	resolve_title_and_vassal_change = scope:title_change_normans_flee


	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = normans_are_french
	}
	scope:norman_king = { 
		change_liege = {
			liege = scope:french_king
			change = scope:normans_are_french
		}
	}
	scope:rouen_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}
	scope:bayeux_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}
	scope:avranches_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}
	scope:lisieux_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}
	scope:eu_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}
	scope:maine_count = { 
		change_liege = {
			liege = scope:norman_king
			change = scope:normans_are_french
		}
	}			
	resolve_title_and_vassal_change = scope:normans_are_french
}
#######################################
#									  #
#         Anglo-Norse Effects  	      #
#									  #
#######################################
embrace_anglo_norse_culture_effect = {
	# Save the root character as a reference
	save_scope_as = converting_character
	# Save the old culture as a scope
	$OLD_CULTURE$ = {
		save_scope_as = old_culture
	}
	$NEW_CULTURE$ = {
		save_scope_as = new_culture
	}
	$CONVERTER$ = {
		save_scope_as = converter
	}
	add_character_modifier = {
		modifier = embraced_local_traditions_modifier
	}
	if = {
		limit = {
			exists = dynasty
			dynasty = {
				NOT = {
					has_dynasty_modifier = settled_norse_dynasty_modifier
				}
			}
		}
		dynasty = {
			add_dynasty_modifier = { modifier = settled_norse_dynasty_modifier years = 80 }
		}
	}
	# Convert root character and AI close family members
	set_culture = scope:new_culture

	if = {
		limit = {
			is_ai = yes
		}
		add_character_flag = converted_culture_this_lifetime_ai
	}
	else = {
		add_character_flag = converted_culture_this_lifetime
	}

	every_close_family_member = {
		custom = every_close_family_member_sharing_your_culture
		limit = {
			is_courtier_of = scope:converter
			# Only non-ruler same-culture characters
			has_culture = scope:old_culture
		}
		set_culture = scope:new_culture
		hidden_effect = {
			add_character_modifier = {
				modifier = embraced_local_traditions_modifier
			}
		}
		add_to_temporary_list = notified_of_culture_change
	}
	every_consort = {
		#custom = every_consort_sharing_your_culture
		limit = {
			is_ruler = no
			has_culture = scope:old_culture
			NOT = { is_in_list = notified_of_culture_change }
		}
		set_culture = scope:new_culture

		hidden_effect = {
			add_character_modifier = {
				modifier = embraced_local_traditions_modifier
			}
		}
		add_to_temporary_list = notified_of_culture_change
	}

	# All Norse vassals convert
	every_vassal = {
		custom = every_norse_vassal
		limit = {
			culture = scope:old_culture
			NOT = { is_in_list = notified_of_culture_change }
		}
		add_character_modifier = {
			modifier = embraced_local_traditions_modifier
		}
		hidden_effect = {
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						NOT = {
							has_dynasty_modifier = settled_norse_dynasty_modifier
						}
					}
				}
				dynasty = {
					add_dynasty_modifier = { modifier = settled_norse_dynasty_modifier years = 80 }
				}
			}
		}
		set_culture = scope:new_culture

		
		hidden_effect = {
			every_close_family_member = {
				limit = {
					is_courtier_of = scope:converter
					# Only non-ruler same-culture characters
					has_culture = scope:old_culture
				}
				set_culture = scope:new_culture

				hidden_effect = {
					add_character_modifier = {
						modifier = embraced_local_traditions_modifier
					}
				}
				add_to_temporary_list = notified_of_culture_change
			}
			every_consort = {
				limit = {
					is_ruler = no
					has_culture = scope:old_culture
					NOT = { is_in_list = notified_of_culture_change }
				}
				set_culture = scope:new_culture
				hidden_effect = {
					add_character_modifier = {
						modifier = embraced_local_traditions_modifier
					}
				}
				add_to_temporary_list = notified_of_culture_change
			}
		}
		
		add_to_temporary_list = notified_of_culture_change
	}

	# Notifications
	hidden_effect = {
		every_player = {
			limit = {
				OR = {
					is_consort_of = scope:converting_character
					AND = {
						exists = liege
						liege = scope:converting_character
					}
					AND = {
						exists = scope:converting_character.liege
						this = scope:converting_character.liege
					}
				}
				NOT = { is_in_list = notified_of_culture_change }
			}
			send_interface_message = {
				type = culture_conversion
				title = converted_culture_msg_title
				custom_tooltip = converted_from_old_culture_to_new_culture_tt
			}
		}
	}
}
#######################################
#									  #
#       Norman/English Effects  	  #
#									  #
#######################################
establish_norman_adminstration_effects = {# Establishing the Norman Adminstration
	scope:norman_england_king = {
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
		}
		hidden_effect = {
			add_realm_law_skip_effects = partition_succession_law
			# The Duchy of York
			# The Duchy of Lancaster
			title:c_lancashire = { set_de_jure_liege_title = title:d_lancaster }
			title:c_westmorland = { set_de_jure_liege_title = title:d_lancaster }
			title:c_cheshire = { set_de_jure_liege_title = title:d_lancaster }
			title:c_derby = { set_de_jure_liege_title = title:d_lancaster }
			# The Duchy of Gloucester
			title:c_gloucestershire = { set_de_jure_liege_title = title:d_gloucester }
			title:c_wiltshire = { set_de_jure_liege_title = title:d_gloucester }
			title:c_oxfordshire = { set_de_jure_liege_title = title:d_gloucester }
			title:c_berkshire = { set_de_jure_liege_title = title:d_gloucester }			
			# The Duchy of Hereford
			title:c_hereford = { set_de_jure_liege_title = title:d_hereford }
			title:c_shropshire = { set_de_jure_liege_title = title:d_hereford }
			# The Duchy of Warwick
			title:c_warwickshire = { set_de_jure_liege_title = title:d_warwick }
			title:c_worcestershire = { set_de_jure_liege_title = title:d_warwick }
			title:c_staffordshire = { set_de_jure_liege_title = title:d_warwick }
			# The Duchy of Bedford
			title:c_bedford = { set_de_jure_liege_title = title:d_bedford }
			title:c_huntingdonshire = { set_de_jure_liege_title = title:d_bedford }
			# The Duchy of Buckingham
			title:c_buckinghamshire = { set_de_jure_liege_title = title:d_buckingham }
			title:c_middlesex = { set_de_jure_liege_title = title:d_buckingham }
			title:c_essex = { set_de_jure_liege_title = title:d_buckingham }
			title:c_hertfordshire = { set_de_jure_liege_title = title:d_buckingham }
			# The Duchy of Northumberland
			title:c_northumberland = { set_de_jure_liege_title = title:d_northumberland }
			title:c_durham = { set_de_jure_liege_title = title:d_northumberland }
			title:c_cumberland = { set_de_jure_liege_title = title:d_northumberland }
			# The Duchy of Norfolk
			title:c_norfolk = { set_de_jure_liege_title = title:d_norfolk }
			title:c_suffolk = { set_de_jure_liege_title = title:d_norfolk }
			title:c_cambridgeshire = { set_de_jure_liege_title = title:d_norfolk }
			# The Duchy of Surrey
			title:c_kent = { set_de_jure_liege_title = title:d_canterbury }
			title:c_surrey = { set_de_jure_liege_title = title:d_canterbury }
			title:c_sussex = { set_de_jure_liege_title = title:d_canterbury }
			# The Duchy of Sommerset
			title:c_hampton = { set_de_jure_liege_title = title:d_somerset }
			title:c_isle_of_wight = { set_de_jure_liege_title = title:d_somerset }
			title:c_somerset = { set_de_jure_liege_title = title:d_somerset }
			title:c_dorset = { set_de_jure_liege_title = title:d_somerset }
			# The Duchy of Lincolnshire
			title:c_lincolnshire = { set_de_jure_liege_title = title:d_lincoln }
			title:c_leicestershire = { set_de_jure_liege_title = title:d_lincoln }
			title:c_nottinghamshire = { set_de_jure_liege_title = title:d_lincoln }
			title:c_northamptonshire = { set_de_jure_liege_title = title:d_lincoln }
			if = {
				limit = { 
					AND = {
						is_ai = yes
						has_title = title:d_brambugh 
					}
				}
				destroy_title = title:d_brambugh
			}
			if = {
				limit = {
					AND = {
						is_ai = yes
						has_title = title:d_norfolk 
					}
				}
				destroy_title = title:d_norfolk
			}
			if = {
				limit = { 
					AND = {
						is_ai = yes
						has_title = title:d_somerset 
					}					
				}
				destroy_title = title:d_somerset
			}
			if = {
				limit = {
					AND = {
						is_ai = yes
						has_title = title:d_canterbury 
					}					
				}
				destroy_title = title:d_canterbury
			}
			if = {
				limit = {
					AND = {
						is_ai = yes
						has_title = title:d_five_burhs 
					}					
					
				}
				destroy_title = title:d_five_burhs
			}
			if = {
				limit = {
					AND = {
						is_ai = yes
						has_title = title:d_mercia 
					}					
				}
				destroy_title = title:d_mercia
			}
			if = {
				limit = {
					AND = {
						is_ai = yes
						has_title = title:d_bedford 
					}					
				}
				destroy_title = title:d_bedford
			}
			resolve_title_and_vassal_change = scope:change
		}
	}
}
embrace_english_culture_effect = {# embracing English
	# Scopes saves for localization
	root = {
		save_scope_as = embracer
	}

	# Prestige Bonus
	add_prestige = medium_prestige_gain

	#Convert your, and your whole family's, culture
	set_culture = culture:english
	if = {
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = {
				is_landed = no
			}
			set_culture = culture:english
		}
	}
	if = {
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:english
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = culture:norman
					culture = culture:french
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				OR = {
					culture = culture:norman
					culture = culture:french
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
			set_culture = culture:english
		}
	}

	#Flip Counties
	every_county_in_region = {
		region = custom_england
		custom = embrace_english_culture_counties_custom
		limit = {
			target_is_de_facto_liege_or_above = root.primary_title
		}
		random = {
			chance = 40
			set_county_culture = culture:english
		}
	}
}
embrace_english_county_culture_effect = {# counts embracing englishness
	# Prestige Bonus

	#Convert your, and your whole family's, culture
	set_culture = culture:english
	if = {
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = { is_landed = no }
			set_culture = culture:english
		}
	}
	if = {
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:english
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = culture:anglo_norse
					culture = culture:anglo_saxon
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				OR = {
					culture = culture:anglo_norse
					culture = culture:anglo_saxon
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
			set_culture = culture:english
		}
	}
}
bryten_establish_cinque_ports_effect = {
	add_character_modifier = {
		modifier = bryten_cinque_port_creator_modifier
		years = 10
	}
	stress_impact = {
		greedy = minor_stress_impact_gain
		arbitrary = miniscule_stress_impact_gain
	}
	title:c_sussex = { add_county_modifier = {	modifier = bryten_cinque_port_modifier } }
	title:c_kent = { add_county_modifier = { modifier = bryten_cinque_port_modifier	} }
}
#######################################
#									  #
#         Irish Effects  	      	  #
#									  #
#######################################
strengthen_high_king_decision_effects = {
	### Give k_ireland to scope:high_king_ireland.
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
	}
	title:k_ireland = {
		change_title_holder = {
			holder = scope:high_king_ireland
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	### Give the de jure Ireland the list of all the kings.
	hidden_effect = {
		title:k_ireland = {

			# & title history.
			copy_title_history = title:k_ireland_titular
		}
	}
	### Destroy k_ireland_titular.
	destroy_title = title:k_ireland_titular
	# All claims on k_ireland_titular become claims on k_ireland
	title:k_ireland_titular = {
		every_claimant = {
			custom = strengthen_high_king_decision_effects.all_claimants
			remove_claim = title:k_ireland_titular
			add_unpressed_claim = title:k_ireland
		}
	}
}
#######################################
#									  #
#         Scottish Effects  	      #
#									  #
#######################################
create_lothian_duchy_effects = {
	scope:lothian_duchy_creator = {
		# create the duchy
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:d_lothian = {
			change_title_holder = {
				holder = scope:lothian_duchy_creator
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		##Configure the new de jure setup.
		title:c_lothian = { set_de_jure_liege_title = title:d_lothian }
		title:c_dunbar = { set_de_jure_liege_title = title:d_lothian }
		title:c_teviotdale = { set_de_jure_liege_title = title:d_lothian }
		title:c_linlithgowshire = { set_de_jure_liege_title = title:d_lothian }
		title:c_lanarkshire = { set_de_jure_liege_title = title:d_lothian }
	}
}
integrate_strathclyde_kingdom_effect = {
	##Configure the new de jure setup.
	title:d_galloway = { set_de_jure_liege_title = title:k_scotland }
	hidden_effect = {
		if = {
			limit = { has_title = title:k_strathclyde }
			destroy_title = title:k_strathclyde
		}
	}
}
bryten_saint_andrew_infrastructure_close_effect = {
	if = {
		limit = { religion = religion:christianity_religion }
		every_held_title = {
			limit = {
				tier = tier_county
				any_county_province = {	geographical_region = bryten_saint_andrew_region	}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_close
				years = 10
			}
		}	
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				religion = religion:christianity_religion
				any_county_province = {	geographical_region = bryten_saint_andrew_region }
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_close
				years = 10
			}
		}
	}
}
bryten_saint_andrew_infrastructure_midrange_high_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				any_county_province = {
					geographical_region = bryten_close_to_saint_andrew_region
					NOT = { geographical_region = bryten_saint_andrew_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_midrange_high
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_close_to_saint_andrew_region
					NOT = { geographical_region = bryten_saint_andrew_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_midrange_high
				years = 10
			}
		}
	}	
}
bryten_saint_andrew_infrastructure_distant_high_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				any_county_province = {
					geographical_region = bryten_distant_from_saint_andrew_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_distant_high
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_distant_from_saint_andrew_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_distant_high
				years = 10
			}
		}
	}	
}
bryten_saint_andrew_infrastructure_midrange_low_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				any_county_province = {
					geographical_region = bryten_close_to_saint_andrew_region
					NOT = { geographical_region = bryten_saint_andrew_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_midrange_low
				years = 10
			}
		}	
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_close_to_saint_andrew_region
					NOT = { geographical_region = bryten_saint_andrew_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_midrange_low
				years = 10
			}
		}	
	}
}
bryten_saint_andrew_infrastructure_distant_low_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				any_county_province = {
					geographical_region = bryten_distant_from_saint_andrew_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_distant_low
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_distant_from_saint_andrew_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_andrew_infrastructure_distant_low
				years = 10
			}
		}
	}	
}
#######################################
#									  #
#         Brythonic Effects  	      #
#									  #
#######################################
bryten_reclaim_britannia_decision_effect = {# Restoring Britian
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_britian = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_britian

	title:k_kent = { add_to_list = brythonic_kingdom }
	title:k_northumbria = { add_to_list = brythonic_kingdom }
	title:k_mercia = { add_to_list = brythonic_kingdom }
	title:k_east_anglia = { add_to_list = brythonic_kingdom }
	title:k_wessex = { add_to_list = brythonic_kingdom }
	title:k_essex = { add_to_list = brythonic_kingdom }
	title:k_wales = { add_to_list = brythonic_kingdom }
	title:k_cornwall = { add_to_list = brythonic_kingdom }

	every_in_list = {
		list = brythonic_kingdom
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_duchy
			}
			set_de_jure_liege_title = title:k_britian
		}
	}

	hidden_effect = {# transform the duchies for the celts
		title:d_cornwall = { set_de_jure_liege_title = title:k_britian }
		title:d_york = { set_de_jure_liege_title = title:k_britian }
		title:d_lancaster = { set_de_jure_liege_title = title:k_britian }
		title:d_gloucester = { set_de_jure_liege_title = title:k_britian }
		title:d_lincoln = { set_de_jure_liege_title = title:k_britian }
		title:d_buckingham = { set_de_jure_liege_title = title:k_britian }
		title:d_powys = { set_de_jure_liege_title = title:k_britian }
		title:d_somerset = { set_de_jure_liege_title = title:k_britian }
		title:d_canterbury = { set_de_jure_liege_title = title:k_britian }
		title:d_bedford = { set_de_jure_liege_title = title:k_britian }
		title:d_brambugh = { set_de_jure_liege_title = title:k_britian }
		title:d_gwynedd = { set_de_jure_liege_title = title:k_britian }
		title:d_deheubarth = { set_de_jure_liege_title = title:k_britian }
		# Duchy of Cornwall
		title:c_dorset = { set_de_jure_liege_title = title:d_cornwall }
		title:c_somerset = { set_de_jure_liege_title = title:d_cornwall }
		# Duchy of Elmet / York
		title:c_north_riding = { set_de_jure_liege_title = title:d_york }
		title:c_east_riding = { set_de_jure_liege_title = title:d_york }
		title:c_west_riding = { set_de_jure_liege_title = title:d_york }
		# Duchy of Rhegghed
		title:c_cumberland = { set_de_jure_liege_title = title:d_lancaster }
		title:c_cheshire = { set_de_jure_liege_title = title:d_lancaster }
		title:c_westmorland = { set_de_jure_liege_title = title:d_lancaster }
		title:c_lancashire = { set_de_jure_liege_title = title:d_lancaster }
		# Duchy of Llwytgoed / Gloustershire
		title:c_gloucestershire = { set_de_jure_liege_title = title:d_gloucester }
		title:c_wiltshire = { set_de_jure_liege_title = title:d_gloucester }
		title:c_warwickshire = { set_de_jure_liege_title = title:d_gloucester }
		title:c_worcestershire = { set_de_jure_liege_title = title:d_gloucester }
		title:c_oxfordshire = { set_de_jure_liege_title = title:d_gloucester }
		# Duchy of Caerlinnwys(lincoln
		title:c_leicestershire = { set_de_jure_liege_title = title:d_lincoln }
		title:c_staffordshire = { set_de_jure_liege_title = title:d_lincoln }
		title:c_derby = { set_de_jure_liege_title = title:d_lincoln }
		title:c_nottinghamshire = { set_de_jure_liege_title = title:d_lincoln }
		title:c_lincolnshire = { set_de_jure_liege_title = title:d_lincoln }
		# Duchy of Rhydwely / Bedford
		title:c_huntingdonshire = { set_de_jure_liege_title = title:d_buckingham }
		title:c_northamptonshire = { set_de_jure_liege_title = title:d_buckingham }
		title:c_bedford = { set_de_jure_liege_title = title:d_buckingham }
		title:c_buckinghamshire = { set_de_jure_liege_title = title:d_buckingham }
		# Duchy of Powys
		title:c_hereford = { set_de_jure_liege_title = title:d_powys }
		title:c_shropshire = { set_de_jure_liege_title = title:d_powys }
		# Duchy of Powys
		title:c_hampton = { set_de_jure_liege_title = title:d_somerset }
		title:c_isle_of_wight = { set_de_jure_liege_title = title:d_somerset }
		title:c_wiltshire = { set_de_jure_liege_title = title:d_somerset }
		title:c_berkshire = { set_de_jure_liege_title = title:d_somerset }
	}

	hidden_effect = {# destroy other English titles
		if = {
			limit = { has_title = title:k_kent }
			destroy_title = title:k_kent
		}
		if = {
			limit = { has_title = title:k_northumbria }
			destroy_title = title:k_northumbria
		}
		if = {
			limit = { has_title = title:k_mercia }
			destroy_title = title:k_mercia
		}
		if = {
			limit = { has_title = title:k_east_anglia }
			destroy_title = title:k_east_anglia
		}
		if = {
			limit = { has_title = title:k_wessex }
			destroy_title = title:k_wessex
		}
		if = {
			limit = { has_title = title:k_essex }
			destroy_title = title:k_essex
		}
		if = {
			limit = { has_title = title:k_wales }
			destroy_title = title:k_wales
		}
		if = {
			limit = { has_title = title:k_cornwall }
			destroy_title = title:k_cornwall
		}
	}

	every_sub_realm_county = {
		limit = {
			NOR = {
				culture = { has_cultural_pillar = heritage_goidelic }
				culture = { has_cultural_pillar = heritage_brythonic }
			}
			title_province = { geographical_region = custom_brythonic_britian }
		}
		custom = british_isles.0001.custom
		add_county_modifier = {
			modifier = reclaim_britannia_culture_modifier
			days = 3650
		}
	}
	capital_county = { set_county_culture = root.culture }
	give_nickname = nick_pendragon
}
embrace_brython_culture_effect = {# Embracing brython culture
	# Prestige Bonus

	#Convert your, and your whole family's, culture
	set_culture = culture:brython
	if = {
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = { is_landed = no }
			set_culture = culture:brython
		}
	}
	if = {
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:brython
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				primary_title = {
					OR = {
						de_jure_liege = title:k_britian
						de_jure_liege.de_jure_liege = title:k_britian
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_britian
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				primary_title = {
					OR = {
						de_jure_liege = title:k_britian
						de_jure_liege.de_jure_liege = title:k_britian
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_britian
					}
				}
			}
			set_culture = culture:brython
		}
	}
}
#######################################
#									  #
#         	Norse Effects	  	      #
#									  #
#######################################
create_kingdom_gotland_decision_scripted_effect = {# Create the Kingdom of Gothaland
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_gotaland = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_gotaland

	title:d_vastergotland = { add_to_list = gothic_kingdom }
	title:d_ostergotland = { add_to_list = gothic_kingdom }
	title:d_smaland = { add_to_list = gothic_kingdom }
	if = {# gotland is also controlled by you add it.
		limit = {
			this = { completely_controls = title:d_gotland }
		}
		title:d_gotland = { add_to_list = gothic_kingdom }
	}

	every_in_list = {
		list = gothic_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_gotaland
		}
	}

}
bryten_saint_olaf_infrastructure_close_effect = {
	if = {
		limit = { religion = religion:christianity_religion }
		every_held_title = {
			limit = {
				tier = tier_county
				any_county_province = {	geographical_region = bryten_saint_olaf_region	}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_close
				years = 10
			}
		}	
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				religion = religion:christianity_religion
				any_county_province = {	geographical_region = bryten_saint_olaf_region }
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_close
				years = 10
			}
		}
	}
}
bryten_saint_olaf_infrastructure_midrange_high_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				any_county_province = {
					geographical_region = bryten_close_to_saint_olaf_region
					NOT = { geographical_region = bryten_saint_olaf_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_midrange_high
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_close_to_saint_olaf_region
					NOT = { geographical_region = bryten_saint_olaf_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_midrange_high
				years = 10
			}
		}
	}	
}
bryten_saint_olaf_infrastructure_distant_high_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				any_county_province = {
					geographical_region = bryten_distant_from_saint_olaf_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_distant_high
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control >= medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_distant_from_saint_olaf_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_distant_high
				years = 10
			}
		}
	}	
}
bryten_saint_olaf_infrastructure_midrange_low_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				any_county_province = {
					geographical_region = bryten_close_to_saint_olaf_region
					NOT = { geographical_region = bryten_saint_olaf_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_midrange_low
				years = 10
			}
		}	
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_close_to_saint_olaf_region
					NOT = { geographical_region = bryten_saint_olaf_region }
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_midrange_low
				years = 10
			}
		}	
	}
}
bryten_saint_olaf_infrastructure_distant_low_effect = {
	if = {
		limit = {
			religion = religion:christianity_religion
		}
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				any_county_province = {
					geographical_region = bryten_distant_from_saint_olaf_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_distant_low
				years = 10
			}
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_county
				county_control < medium_county_control
				religion = religion:christianity_religion
				any_county_province = {
					geographical_region = bryten_distant_from_saint_olaf_region	
				}
			}
			add_county_modifier = {
				modifier = bryten_saint_olaf_infrastructure_distant_low
				years = 10
			}
		}
	}	
}
#######################################
#									  #
#         Italian Effects	  	      #
#									  #
#######################################
embrace_tuscan_culture_effect = {
	# Scopes saves for localization
	root = { save_scope_as = embracer }

	# Prestige Bonus
	add_prestige = medium_prestige_gain

	#Convert your, and your whole family's, culture
	set_culture = culture:tuscan
	if = {# Convert Every Spouse
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = {
				is_landed = no
				OR = {
					culture = culture:italian
				}
			}
			set_culture = culture:tuscan
		}
	}
	if = {# Convert Every close family member
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:tuscan
		}
	}
	if = {# Convert Every Child
		limit = {
			any_child = {
				NOT = { is_spouse_of = root }
			}
		}
		every_child = {
			limit = {
				NOT = { is_spouse_of = root }
			}
			custom = all_children_custom
			set_culture = culture:tuscan
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = culture:italian
				}
				capital_province = { geographical_region = custom_northern_italy }
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				capital_province = { geographical_region = custom_northern_italy }
				is_ai = yes
				OR = {
					culture = culture:italian
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_pisa
						de_jure_liege.de_jure_liege = title:k_pisa
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_pisa

						de_jure_liege = title:d_toscana
						de_jure_liege.de_jure_liege = title:d_toscana
						de_jure_liege.de_jure_liege.de_jure_liege = title:d_toscana	
					}
				}
			}
			set_culture = culture:tuscan
			hidden_effect = {
				if = {
					limit = { any_spouse = { is_landed = no } }
					every_spouse = {
						limit = {
							is_landed = no
							OR = {
								culture = culture:italian
							}
						}
						set_culture = culture:tuscan
					}
				}
				if = {
					limit = {
						any_close_family_member = {
							is_landed = no
							NOT = { is_spouse_of = prev }
						}
					}
					every_close_family_member = {
						limit = {
							is_landed = no
							NOT = { is_spouse_of = prev }
						}
						custom = all_unlanded_family_members
						set_culture = culture:tuscan
					}
				}
				if = {
					limit = {
						any_child = {
							NOT = { is_spouse_of = prev }
						}
					}
					every_child = {
						limit = {
							NOT = { is_spouse_of = prev }
						}
						custom = all_children_custom
						set_culture = culture:tuscan
					}
				}
				if = {
					limit = {
						any_vassal_or_below = {
							is_ai = yes
							OR = {
								culture = culture:italian
							}
							primary_title = {
								OR = {
									de_jure_liege = title:k_pisa
									de_jure_liege.de_jure_liege = title:k_pisa
									de_jure_liege.de_jure_liege.de_jure_liege = title:k_pisa

									de_jure_liege = title:d_toscana
									de_jure_liege.de_jure_liege = title:d_toscana
									de_jure_liege.de_jure_liege.de_jure_liege = title:d_toscana
								}
							}
						}
					}
					every_vassal_or_below = {
						custom = embrace_english_culture_vassals_custom
						limit = {
							is_ai = yes
							OR = {
								culture = culture:italian
							}
							primary_title = {
								OR = {
									de_jure_liege = title:k_pisa
									de_jure_liege.de_jure_liege = title:k_pisa
									de_jure_liege.de_jure_liege.de_jure_liege = title:k_pisa

									de_jure_liege = title:d_toscana
									de_jure_liege.de_jure_liege = title:d_toscana
									de_jure_liege.de_jure_liege.de_jure_liege = title:d_toscana
								}
							}
						}
						set_culture = culture:tuscan
						hidden_effect = {
							if = {
								limit = { any_spouse = { is_landed = no } }
								every_spouse = {
									limit = {
										is_landed = no
										OR = {
											culture = culture:italian
										}
									}
									set_culture = culture:tuscan
								}
							}
							if = {
								limit = {
									any_close_family_member = {
										is_landed = no
										NOT = { is_spouse_of = prev }
									}
								}
								every_close_family_member = {
									limit = {
										is_landed = no
										NOT = { is_spouse_of = prev }
									}
									custom = all_unlanded_family_members
									set_culture = culture:tuscan
								}
							}
							if = {
								limit = {
									any_child = {
										NOT = { is_spouse_of = prev }
									}
								}
								every_child = {
									limit = {
										NOT = { is_spouse_of = prev }
									}
									custom = all_children_custom
									set_culture = culture:tuscan
								}
							}
						}
					}
				}
			}
		}
	}

	#Flip Counties
	every_county_in_region = {
		region = custom_northern_italy
		limit = {
			target_is_de_facto_liege_or_above = root.primary_title
		}
		random = {
			chance = 60
			set_county_culture = culture:tuscan
		}
	}

	culture:tuscan = {
		custom_tooltip = decision_embrace_english_culture_get_innovations
		hidden_effect = {
			reset_culture_creation_date = yes
			get_all_innovations_from = culture:italian
		}
	}
}
#######################################
#									  #
#         Imperial Effects	  	      #
#									  #
#######################################
integrate_sorbia_kingdom_effect = {
	##Configure the new de jure setup.
	title:d_meissen = { set_de_jure_liege_title = title:k_east_francia }
	title:d_lausitz = { set_de_jure_liege_title = title:k_east_francia }
	hidden_effect = {
		if = {
			limit = { has_title = title:k_sorbia }
			destroy_title = title:k_sorbia
		}
	}
}
create_kingdom_frisia_decision_scripted_effect = {# Create the Kingdom of Gothaland
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_frisia = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_frisia

	title:d_holland = { add_to_list = frisia_kingdom }
	title:d_gelre = { add_to_list = frisia_kingdom }
	title:d_utrecht = { add_to_list = frisia_kingdom }
	title:d_frisia = { add_to_list = frisia_kingdom }

	every_in_list = {
		list = frisia_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_frisia
		}
	}

}
create_kingdom_bavaria_decision_scripted_effect = {# Create the Kingdom of Gothaland
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_bavaria = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_bavaria

	title:d_bavaria = { add_to_list = bavaria_kingdom }
	title:d_nordgau = { add_to_list = bavaria_kingdom }
	title:d_salzburg = { add_to_list = bavaria_kingdom }
	title:d_augsburg = { add_to_list = bavaria_kingdom }
	title:d_steyermark = { add_to_list = bavaria_kingdom }
	title:d_osterreich = { add_to_list = bavaria_kingdom }
	title:d_carinthia = { add_to_list = bavaria_kingdom }
	title:d_krain = { add_to_list = bavaria_kingdom }
	title:d_tyrol = { add_to_list = bavaria_kingdom }
	title:d_istria = { add_to_list = bavaria_kingdom }

	every_in_list = {
		list = bavaria_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_bavaria
		}
	}

}
create_kingdom_lotharingia_decision_scripted_effect = {# Create the Kingdom of Lotharingia
	# Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_lotharingia = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}

	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_lotharingia

	title:d_luxembourg = { add_to_list = lotharingia_kingdom }
	title:d_brabant = { add_to_list = lotharingia_kingdom }
	title:d_julich = { add_to_list = lotharingia_kingdom }
	title:d_upper_lorraine = { add_to_list = lotharingia_kingdom }
	title:d_lower_lorraine = { add_to_list = lotharingia_kingdom }
	title:d_bar = { add_to_list = lotharingia_kingdom }
	title:d_smaland = { add_to_list = lotharingia_kingdom }
	if = {# Frisia is also controlled by you add it.
		limit = { this = { completely_controls = title:k_frisia } }
		title:d_holland = { add_to_list = lotharingia_kingdom }
		title:d_gelre = { add_to_list = lotharingia_kingdom }
		title:d_utrecht = { add_to_list = lotharingia_kingdom }
		title:d_frisia = { add_to_list = lotharingia_kingdom }
	}

	every_in_list = {
		list = lotharingia_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_lotharingia
		}
	}
}
thankmar_restored_old_kingdoms_effect = {
	title:d_angria.holder = { save_scope_as = saxon_king }
	title:d_bavaria.holder = { save_scope_as = bavarian_king }
	title:d_swabia.holder = { save_scope_as = swabian_king }
	title:d_west_franconia.holder = { save_scope_as = franconian_king }

	# Saxon Kingdom is created
	create_title_and_vassal_change = {
		type = created
		save_scope_as = saxony_restored
		add_claim_on_loss = no
	}
	title:k_saxony = {# goes to Saxon King
		change_title_holder = {
			holder = scope:saxon_king
			change = scope:saxony_restored
		}
	}
	becomes_independent = { change = scope:saxony_restored }
	resolve_title_and_vassal_change = scope:saxony_restored
	title:d_angria = { add_to_list = saxony_kingdom }
	title:d_westfalen = { add_to_list = saxony_kingdom }
	title:d_ostfalen = { add_to_list = saxony_kingdom }
	title:d_holstein = { add_to_list = saxony_kingdom }
	every_in_list = {
		list = saxony_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_saxony
		}
	}

	# Bavarian Kingdom is created
	create_title_and_vassal_change = {
		type = created
		save_scope_as = bavaria_restored
		add_claim_on_loss = no
	}
	title:k_bavaria = {# goes to Bavarian King
		change_title_holder = {
			holder = scope:bavarian_king
			change = scope:bavaria_restored
		}
	}
	becomes_independent = { change = scope:bavaria_restored }
	resolve_title_and_vassal_change = scope:bavaria_restored
	title:d_bavaria = { add_to_list = bavarian_kingdom }
	title:d_nordgau = { add_to_list = bavarian_kingdom }
	title:d_salzburg = { add_to_list = bavarian_kingdom }
	title:d_augsburg = { add_to_list = bavarian_kingdom }
	title:d_steyermark = { add_to_list = bavarian_kingdom }
	title:d_osterreich = { add_to_list = bavarian_kingdom }
	title:d_tyrol = { add_to_list = bavarian_kingdom }
	title:d_carinthia = { add_to_list = bavarian_kingdom }
	title:d_krain = { add_to_list = bavarian_kingdom }
	title:d_istria = { add_to_list = bavarian_kingdom }
	every_in_list = {
		list = bavarian_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_bavaria
		}
	}

	# Swabian Kingdom is created
	create_title_and_vassal_change = {
		type = created
		save_scope_as = swabia_restored
		add_claim_on_loss = no
	}
	title:k_swabia = {# goes to Saxon King
		change_title_holder = {
			holder = scope:swabian_king
			change = scope:swabia_restored
		}
	}
	becomes_independent = { change = scope:swabia_restored }
	resolve_title_and_vassal_change = scope:swabia_restored
	title:d_swabia = { add_to_list = swabian_kingdom }
	title:d_currezia = { add_to_list = swabian_kingdom }
	title:d_alsace = { add_to_list = swabian_kingdom }
	every_in_list = {
		list = swabian_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_swabia
		}
	}
	# Franconian Kingdom is created
	create_title_and_vassal_change = {
		type = created
		save_scope_as = franconia_restored
		add_claim_on_loss = no
	}
	title:k_franconia = {# goes to Saxon King
		change_title_holder = {
			holder = scope:franconian_king
			change = scope:franconia_restored
		}
	}
	becomes_independent = { change = scope:franconia_restored }
	resolve_title_and_vassal_change = scope:franconia_restored
	title:d_west_franconia = { add_to_list = franconian_kingdom }
	title:d_east_franconia = { add_to_list = franconian_kingdom }
	title:d_thuringia = { add_to_list = franconian_kingdom }
	title:d_hesse = { add_to_list = franconian_kingdom }
	every_in_list = {
		list = franconian_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_franconia
		}
	}

	# Create de Jure Frisa
	title:d_holland = { add_to_list = frisian_kingdom }
	title:d_gelre = { add_to_list = frisian_kingdom }
	title:d_utrecht = { add_to_list = frisian_kingdom }
	title:d_frisia = { add_to_list = frisian_kingdom }
	every_in_list = {
		list = frisian_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_frisia
		}
	}
	
	# Create de Jure Lotharingia
	title:d_luxembourg = { add_to_list = lotharingian_kingdom }
	title:d_brabant = { add_to_list = lotharingian_kingdom }
	title:d_julich = { add_to_list = lotharingian_kingdom }
	title:d_upper_lorraine = { add_to_list = lotharingian_kingdom }
	title:d_lower_lorraine = { add_to_list = lotharingian_kingdom }
	title:d_bar = { add_to_list = lotharingian_kingdom }
	every_in_list = {
		list = lotharingian_kingdom
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy	}
			set_de_jure_liege_title = title:k_lotharingia
		}
	}

	# Everyone else is indepedent
	every_vassal = {
		limit = {
			highest_held_title_tier >= tier_county
			any_held_title = { count = all }
		}
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = no
		}
		becomes_independent = { change = scope:change }
		resolve_title_and_vassal_change = scope:change
	}
	#... And catch the stragglers. Has to be a separate effect block, or we'll ruin the de facto structure.
	every_vassal_or_below = {
		limit = {
			highest_held_title_tier >= tier_county
			any_held_title = { count = all }
		}
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = no
		}
		becomes_independent = { change = scope:change }
		resolve_title_and_vassal_change = scope:change
	}


}
start_slav_rising_polabian_effect = {# Starts the Rising for Polobians
	$REBEL_LEADER$ = { save_scope_as = polobian_rebel_leader }
	$TARGET_COUNTY$ = { save_scope_as = target_county }
	#Give the Slav leader a title
	create_dynamic_title = {
		tier = duchy
		name = bryten_polobian_rebellion_name
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title = {
		set_capital_county = scope:target_county
		set_landless_title = yes
		set_destroy_on_gain_same_tier = yes
		set_no_automatic_claims = yes
		set_can_be_named_after_dynasty = no
		change_title_holder = {
			holder = scope:polobian_rebel_leader
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	scope:new_title = {
		generate_coa = yes
		set_variable = {
			name = temporary_title
			value = yes
		}
	}
	#Declare the war.
	scope:polobian_rebel_leader = {
		start_war = {
			cb = bryten_slav_rising_polobain_war
			target = scope:target_county.holder.top_liege
			target_title = scope:target_county.duchy
		}
	}
	# Setup event troops.
	scope:polobian_rebel_leader = {
		spawn_army = {
			levies = 2400
			men_at_arms = {# Light Footmen
				type = light_footmen
				stacks = 2
			}
			men_at_arms = {# Bowmen
				type = bowmen
				stacks = 1
			}
			men_at_arms = {# Hussar
				type = hussar
				stacks = 2
			}
			men_at_arms = {# Bowmen
				type = bowmen
				stacks = 1
			}
			location = province:2807
			origin = province:2807
			inheritable = no
			name = polobian_rising_army_title
		}
	}
}
#######################################
#									  #
#         Christianity Effects	      #
#									  #
#######################################
fraticelli_victory_decision_effects = {# Fraticelli is victorious
	every_county = {# Convert all counties to Catholic
		limit = { faith = faith:fraticelli }
		set_county_faith = faith:catholic
	}
	every_living_character = {# all Fraticelli people become Catholic
		limit = { faith = faith:fraticelli }
		set_character_faith = faith:catholic
	}
	faith:fraticelli = {# Fraticelli is now unavailable
		add_doctrine = unavailable_doctrine
	}
	faith:catholic = {# Catholic now has Alms and Pacification instead of control
		remove_doctrine = doctrine_clerical_function_taxation
		add_doctrine = doctrine_clerical_function_alms_and_pacification
	}
	faith:catholic = {# Assisi is now a Holy Site for Catholicism
		activate_holy_site = assisi_catholic 
	}
	faith:catholic = {# Catholic now has a special apostolic poverty doctrine
		add_doctrine = has_apostolic_poverty
	}
	faith:catholic = {
		change_fervor = {
			value = medium_fervor_gain
			desc = fervor_gain_fraticelli_victory
		}
	}
}





